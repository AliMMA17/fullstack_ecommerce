worker_processes auto;
events { worker_connections 1024; }

http {
  sendfile on; tcp_nopush on; tcp_nodelay on; server_tokens off;
  client_max_body_size 25m;
  gzip on; gzip_comp_level 6; gzip_min_length 1024;
  gzip_types text/plain text/css application/json application/javascript application/xml;

  # Docker DNS
  resolver 127.0.0.11 ipv6=off valid=30s;

  # Upstreams on the mesh network (container ports!)
  upstream auth_upstream    { server auth:8000;    keepalive 32; }
  upstream catalog_upstream { server catalog:8000; keepalive 32; }

  map $http_upgrade $conn_up { default upgrade; '' close; }

  server {
    listen 80;
    # listen 443 ssl http2;  # add certs for TLS later

    # ---------- /auth ----------
    location /auth/ {
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        $conn_up;
      proxy_set_header Cookie            $http_cookie;
      proxy_pass_request_headers         on;

      # If your FastAPI app does NOT mount under /auth,
      # strip the prefix so upstream sees `/...` instead of `/auth/...`

      proxy_pass http://auth_upstream;
    }

    # ---------- /catalog ----------
    location /catalog/ {
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        $conn_up;
      proxy_set_header Cookie            $http_cookie;
      proxy_pass_request_headers         on;


      proxy_pass http://catalog_upstream;
    }

    # Health for the gateway itself
    location = /health { return 200 "ok\n"; add_header Content-Type text/plain; }
  }
}
